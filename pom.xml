<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.xiaou</groupId>
    <artifactId>Code-Nest</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>
    <modules>
        <module>xiaou-common</module>
        <module>xiaou-system</module>
        <module>xiaou-user-api</module>
        <module>xiaou-user</module>
        <module>xiaou-monitor</module>
        <module>xiaou-application</module>
        <module>xiaou-interview</module>
        <module>xiaou-community</module>
        <module>xiaou-filestorage</module>
        <module>xiaou-notification</module>
        <module>xiaou-moment</module>
        <module>xiaou-sensitive-api</module>
        <module>xiaou-sensitive</module>
        <module>xiaou-knowledge</module>
        <module>xiaou-version</module>
        <module>xiaou-moyu</module>
        <module>xiaou-points</module>
    </modules>

    <properties>
        <!-- 统一版本管理 -->
        <revision>1.3.0</revision>
        
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <java.version>17</java.version>
        <spring-boot.version>3.4.4</spring-boot.version>
        <hutool.version>5.8.35</hutool.version>
        <lombok.version>1.18.36</lombok.version>
        <jjwt.version>0.11.5</jjwt.version>
        <pagehelper.version>6.1</pagehelper.version>

        <!-- 插件版本 -->
        <maven-jar-plugin.version>3.2.2</maven-jar-plugin.version>
        <maven-war-plugin.version>3.2.2</maven-war-plugin.version>
        <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
        <flatten-maven-plugin.version>1.3.0</flatten-maven-plugin.version>
        <versions-maven-plugin.version>2.16.2</versions-maven-plugin.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <!-- SpringBoot的依赖配置-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- hutool 的依赖配置-->

            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            
            <!-- JWT 相关依赖版本管理 -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-impl</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-jackson</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            
            <!-- PageHelper 分页插件 -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>2.1.1</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-configuration-processor</artifactId>
                            <version>${spring-boot.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <!-- 启用 -parameters 编译器标志 -->
                    <compilerArgument>-parameters</compilerArgument>
                </configuration>
            </plugin>
            <plugin>
                <!-- 插件的 GroupId，标识插件所属的组织 -->
                <groupId>org.codehaus.mojo</groupId>
                <!-- 插件的 ArtifactId，标识插件的名称 -->
                <artifactId>flatten-maven-plugin</artifactId>
                <!-- 插件的版本号，这里通过变量引用上面定义的版本号 -->
                <version>${flatten-maven-plugin.version}</version>
                <configuration>
                    <!-- 配置扁平化后的 POM 文件的名称 -->
                    <flattenedPomFilename>pom-xml-flattened</flattenedPomFilename>
                    <!-- 是否更新原始 POM 文件 -->
                    <updatePomFile>true</updatePomFile>
                    <!-- 指定扁平化模式，resolveCiFriendliesOnly 表示仅解析 CI 友好的占位符 -->
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <!-- 定义插件的执行配置 -->
                    <execution>
                        <!-- 执行的唯一标识 -->
                        <id>flatten</id>
                        <!-- 指定插件绑定的生命周期阶段 -->
                        <phase>process-resources</phase>
                        <!-- 定义执行的目标 -->
                        <goals>
                            <!-- 执行扁平化操作 -->
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <!-- 定义清理阶段的执行配置 -->
                    <execution>
                        <!-- 清理阶段的唯一标识 -->
                        <id>flatten.clean</id>
                        <!-- 指定清理阶段绑定的生命周期阶段 -->
                        <phase>clean</phase>
                        <!-- 定义清理阶段执行的目标 -->
                        <goals>
                            <!-- 执行清理操作 -->
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <!-- Versions Maven Plugin - 统一版本管理 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${versions-maven-plugin.version}</version>
                <configuration>
                    <!-- 处理快照版本 -->
                    <allowSnapshots>false</allowSnapshots>
                    <!-- 生成备份文件 -->
                    <generateBackupPoms>true</generateBackupPoms>
                </configuration>
            </plugin>
        </plugins>


        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
        </resources>

    </build>

</project>